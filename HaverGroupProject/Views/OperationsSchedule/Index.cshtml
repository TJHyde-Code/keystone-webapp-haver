@model IEnumerable<HaverGroupProject.Models.OperationsSchedule>

@{
    ViewData["Title"] = "Operations Schedule";
}

<h1>Operations Schedule</h1>

<div class="shadow-lg p-3 mb-5 bg-body-tertiary rounded">
    <p>
        <a asp-action="Step1" class="btn btn-success" style="font-size: 12px;">Create New</a>
    </p>

    <div class="table-responsive">
        <table class="table table-bordered table-striped table-hover">
            <thead class="table-col">
                <tr>
                    <th>@Html.DisplayNameFor(model => model.SalesOrdNum)</th>
                    <th>@Html.DisplayNameFor(model => model.ExtSalesOrdNum)</th>
                    <th>@Html.DisplayNameFor(model => model.Customer)</th>
                    <th>@Html.DisplayNameFor(model => model.Engineer)</th>
                    <th>@Html.DisplayNameFor(model => model.MachineDescription)</th>
                    <th>@Html.DisplayNameFor(model => model.MachineDescription.SerialNumber)</th>
                    <th>@Html.DisplayNameFor(model => model.PackageReleaseName)</th>
                    <th>@Html.DisplayNameFor(model => model.KickoffMeeting)</th>
                    <th>@Html.DisplayNameFor(model => model.ReleaseApprovalDrawing)</th>
                    <th>@Html.DisplayNameFor(model => model.OperationsScheduleVendors)</th>
                    <th>@Html.DisplayNameFor(model => model.ProductionOrderNumber)</th>
                    <th>@Html.DisplayNameFor(model => model.PODueDate)</th>
                    <th>@Html.DisplayNameFor(model => model.DeliveryDate)</th>
                    <th>Extras</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        <td>@Html.DisplayFor(modelItem => item.SalesOrdNum)</td>
                        <td>@Html.DisplayFor(modelItem => item.ExtSalesOrdNum)</td>
                        <td>@(item.Customer != null ? item.Customer.CustomerName : "N/A")</td>
                        <td>@(item.Engineer != null ? item.Engineer.EngSummary : "N/A")</td>
                        <td>@(item.MachineDescription != null ? item.MachineDescription.DescriptionSummary : "N/A")</td>
                        <td>@(item.MachineDescription != null ? item.MachineDescription.SerialNumber : "N/A")</td>
                        <td>@(item.PackageReleaseName ?? "N/A")</td>
                        <td>@Html.DisplayFor(modelItem => item.KickoffMeeting)</td>
                        <td>@Html.DisplayFor(modelItem => item.ReleaseApprovalDrawing)</td>
                        <td>
                            @{
                                var vendors = item.OperationsScheduleVendors?.Select(v => v?.Vendor?.VendorName ?? "Unknown Vendor").ToList() ?? new List<string>();
                                if (vendors.Any())
                                {
                                    <span>@vendors.First()</span>
                                    if (vendors.Count > 1)
                                    {
                                        <span class="badge bg-info">+@(vendors.Count - 1)</span>
                                    }
                                }
                                else
                                {
                                    @:No Vendor
                                }
                            }
                        </td>
                        <td>@(item.ProductionOrderNumber ?? "N/A")</td>
                        <td>@Html.DisplayFor(modelItem => item.PODueDate)</td>
                        <td>@Html.DisplayFor(modelItem => item.DeliveryDate)</td>
                        <td>@(item.MachineDescription != null && item.MachineDescription.InstalledMedia ? "Installed Media" : "No Extras")</td>
                        <td>
                            <div class="btn-group">
                                <a asp-action="Edit" asp-route-id="@item.ID" class="btn btn-primary btn-sm">Edit</a>
                                <a asp-action="Details" asp-route-id="@item.ID" class="btn btn-info btn-sm">Details</a>
                            </div>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

    <div class="d-flex justify-content-center my-3">
        <button id="prev" class="btn btn-success me-2">Previous</button>
        <span id="page-info" class="mx-2"></span>
        <button id="next" class="btn btn-success ms-2">Next</button>
    </div>
</div>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        const rowsPerPage = 10;
        let currentPage = 1;
        const tableRows = document.querySelectorAll("tbody tr");
        const totalPages = Math.ceil(tableRows.length / rowsPerPage);
        const prevBtn = document.getElementById("prev");
        const nextBtn = document.getElementById("next");
        const pageInfo = document.getElementById("page-info");

        function renderTable() {
            tableRows.forEach((row, index) => {
                row.style.display = (index >= (currentPage - 1) * rowsPerPage && index < currentPage * rowsPerPage)
                    ? ""
                    : "none";
            });

            pageInfo.textContent = `Page ${currentPage} of ${totalPages}`;
            prevBtn.disabled = currentPage === 1;
            nextBtn.disabled = currentPage === totalPages;
        }

        prevBtn.addEventListener("click", function () {
            if (currentPage > 1) {
                currentPage--;
                renderTable();
            }
        });

        nextBtn.addEventListener("click", function () {
            if (currentPage < totalPages) {
                currentPage++;
                renderTable();
            }
        });

        renderTable();
    });
</script>