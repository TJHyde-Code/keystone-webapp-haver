@model HaverGroupProject.ViewModels.MultiStepOperationsScheduleViewModel

@{
    ViewData["Title"] = "Step 3 - Select or Create Machine";
}

<h2>Step 3: Select or Create a Machine</h2>
<div class="shadow-lg p-3 mb-5 bg-body-tertiary rounded">
    <form asp-action="Step3" method="post">
        @* <div class="form-group">
            <label asp-for="MachineDescriptionID" class="control-label fw-bold">Machine Description</label>
            <select asp-for="MachineDescriptionID" class="form-control border-primary input-width" asp-items="Model.Machines">
                <option value="">-- Select a Machine --</option>
            </select>
            <span asp-validation-for="MachineDescriptionID" class="text-danger"></span>
        </div> *@

        <a asp-action="Step2" asp-route-id="@Model.ID" class="btn btn-success">Previous</a>
        <button type="submit" class="btn btn-primary">Next</button>
        <button type="submit" name="save" value="true" class="btn btn-warning">Save</button>

        <div>
            <!-- Add the modal trigger button inside the form -->
            <button type="button" class="btn btn-success mt-2" data-bs-toggle="modal" data-bs-target="#machineModal">
                Add New Machine
            </button>
        </div>

    </form>
</div>

<!-- Display the list of newly added machines -->
<div class="mt-3">
    <h3>Machines Added:</h3>
    <ul id="machinesList" class="list-group">
        <!-- New machine items will be appended here -->
    </ul>
</div>

<!-- Machine Modal -->
<div class="modal fade" id="machineModal" tabindex="-1" aria-labelledby="machineModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Create New Machine</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="machineForm">
                    <div class="mb-3">
                        <label for="serialNumber" class="form-label">Serial Number</label>
                        <input type="text" class="form-control" id="serialNumber" placeholder="SN123456" required>
                        <span class="text-danger" id="serialNumberError"></span>

                        <label for="size" class="form-label">Size (Size must be supplied in the format of #'x##')</label>
                        <input type="text" class="form-control" id="size" placeholder="6'x20'" required>
                        <span class="text-danger" id="sizeError"></span>

                        <label for="class" class="form-label">Class (Class must be in the format of [A-Z]-###)</label>
                        <input type="text" class="form-control" id="class" placeholder="T-220" required>
                        <span class="text-danger" id="classError"></span>

                        <label for="deck" class="form-label">Deck (Deck must be in the given as #D)</label>
                        <input type="text" class="form-control" id="deck" placeholder="3D" required>
                        <span class="text-danger" id="deckError"></span>

                        <div class="form-check">
                            <input class="form-check-input" type="checkbox" id="namePlateOrdered">
                            <label class="form-check-label" for="namePlateOrdered">Name Plate Ordered</label>
                        </div>

                        <div class="form-check">
                            <input class="form-check-input" type="checkbox" id="nameplateRecieved">
                            <label class="form-check-label" for="nameplateRecieved">Nameplate Received</label>
                        </div>

                        <div class="form-check">
                            <input class="form-check-input" type="checkbox" id="installedMedia">
                            <label class="form-check-label" for="installedMedia">Installed Media</label>
                        </div>

                        <div class="form-check">
                            <input class="form-check-input" type="checkbox" id="sparePartsSpareMedia">
                            <label class="form-check-label" for="sparePartsSpareMedia">Spare Parts/Spare Media</label>
                        </div>

                        <div class="form-check">
                            <input class="form-check-input" type="checkbox" id="baseFrame">
                            <label class="form-check-label" for="baseFrame">Base Frame</label>
                        </div>

                        <div class="form-check">
                            <input class="form-check-input" type="checkbox" id="airSeal">
                            <label class="form-check-label" for="airSeal">Air Seal</label>
                        </div>

                        <div class="form-check">
                            <input class="form-check-input" type="checkbox" id="coatingLining">
                            <label class="form-check-label" for="coatingLining">Coating Lining</label>
                        </div>

                        <div class="form-check">
                            <input class="form-check-input" type="checkbox" id="disassembly">
                            <label class="form-check-label" for="disassembly">Disassembly</label>
                        </div>
                    </div>
                    <button type="button" class="btn btn-success" id="saveMachine">Save</button>
                </form>
            </div>
        </div>
    </div>
</div>

<!-- Scripts -->
<script src="https://code.jquery.com/jquery-3.5.1.min.js"></script> <!-- jQuery -->
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script> <!-- Bootstrap JS -->
<script>
    $(document).ready(function () {
        console.log("jQuery is loaded and working!");

        // Clear validation errors and reset the form when the modal is shown
        $('#machineModal').on('shown.bs.modal', function () {
            $('#serialNumberError, #sizeError, #classError, #deckError').text(''); // Clear error messages
            $('#machineForm')[0].reset(); // Reset the form fields
        });

        // When the "Save" button inside the modal is clicked
        $('#saveMachine').click(function (event) {
            event.preventDefault(); // Prevent form submission

            // Gather machine data from the form
            var machineData = {
                SerialNumber: $('#serialNumber').val(),
                Size: $('#size').val(),
                Class: $('#class').val(),
                Deck: $('#deck').val(),
                NamePlateOrdered: $('#namePlateOrdered').prop('checked'),
                NameplateRecieved: $('#nameplateRecieved').prop('checked'),
                InstalledMedia: $('#installedMedia').prop('checked'),
                SparePartsSpareMedia: $('#sparePartsSpareMedia').prop('checked'),
                BaseFrame: $('#baseFrame').prop('checked'),
                AirSeal: $('#airSeal').prop('checked'),
                CoatingLining: $('#coatingLining').prop('checked'),
                Disassembly: $('#disassembly').prop('checked')
            };

            // Simple validation checks
            var isValid = true;
            $('#serialNumberError, #sizeError, #classError, #deckError').text('');

            if (!machineData.SerialNumber) {
                $('#serialNumberError').text('Serial number is required.');
                isValid = false;
            }
            if (!machineData.Size) {
                $('#sizeError').text('Size is required.');
                isValid = false;
            }
            if (!machineData.Class) {
                $('#classError').text('Class is required.');
                isValid = false;
            }
            if (!machineData.Deck) {
                $('#deckError').text('Deck is required.');
                isValid = false;
            }

            if (!isValid) {
                return; // Stop the form submission if validation fails
            }

            // AJAX request to create the machine
            var token = $('input[name="__RequestVerificationToken"]').val();
            $.ajax({
                url: '/MachineDescription/CreateMachineModal',
                type: 'POST',
                data: JSON.stringify(machineData), // Send data as JSON
                contentType: 'application/json',
                Headers: {
                    'RequestVerificationToken':token
                },
                success: function (response) {
                    if (response.success) {
                        // Close the modal
                        $('#machineModal').modal('hide');
                        $('body').removeClass('modal-open');
                        $('.modal-backdrop').remove();

                        // // Update the label with the new machine's details
                        // $('#machineLabel').text("New Machine Added: " + response.newMachineDescription);

                        // Append new machine to the machines list
                        var machineHtml = `
                                <li class="list-group-item">
                                    <strong>Machine:</strong> ${response.newMachineDescription}<br>
                                    <strong>Serial Number:</strong> ${machineData.SerialNumber}<br>
                                    <strong>Size:</strong> ${machineData.Size}<br>
                                    <strong>Class:</strong> ${machineData.Class}<br>
                                    <strong>Deck:</strong> ${machineData.Deck}
                                </li>
                            `;
                        $('#machinesList').append(machineHtml); // Add the new machine to the list
                        
                        // Reset the modal form
                        $('#machineForm')[0].reset();

                        // Now link the machine to the Operations Schedule
                        var operationsScheduleId = '@Model.ID'; // Assuming the model has the OperationsSchedule ID
                        var machineDescriptionId = response.newMachineID;

                        // Make the second AJAX request to add the machine to the operations schedule
                        $.ajax({
                            url: '/OperationsSchedule/AddMachineToSchedule',  // The controller method to link the machine
                            type: 'POST',
                            data: {
                                machineDescriptionId: machineDescriptionId,
                                operationsScheduleId: operationsScheduleId
                            },
                            success: function (result) {
                                if (result.success) {
                                    console.log("Machine successfully added to the schedule.");
                                } else {
                                    alert('Error adding machine to the schedule');
                                }
                            },
                            error: function (xhr, status, error) {
                                console.error("Error details:", xhr.responseText, status, error);
                                alert('An error occurred while adding the machine to the schedule.');
                            }
                        });
                    } else {
                        alert('Error creating machine');
                    }
                },
                error: function (xhr, status, error) {
                    console.error("Error details:", xhr.responseText, status, error);
                    alert('An error occurred: ' + xhr.responseText);  // Display more detailed error info
                }
            });
        });

        // Reset form and validation errors when the modal is hidden
        $('#machineModal').on('hidden.bs.modal', function () {
            // Clear validation errors and reset form when modal is closed
            $('#serialNumberError, #sizeError, #classError, #deckError').text('');
            $('#machineForm')[0].reset(); // Reset the form fields
        });
    });
</script>
