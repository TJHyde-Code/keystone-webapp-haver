@model HaverGroupProject.ViewModels.MultiStepOperationsScheduleViewModel

@{
    ViewData["Title"] = "Step 2 - Select or Create Customer";
}

<style>
    body {
        background-color: #f5f5f5;
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    }

    .progress-bar-img {
        height: 75px;
        width: 1000px;
        margin: 20px 0;
        max-width: 100%;
    }

    h2 {
        color: #0A2240; /* Deep blue */
        font-weight: 600;
        margin-bottom: 1.5rem;
        text-align: center;
    }

    .card-container {
        background-color: white;
        border-radius: 0.5rem;
        box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15);
        padding: 2rem;
        margin-bottom: 2rem;
    }

    .form-group {
        margin-bottom: 1.5rem;
    }

    .control-label {
        font-weight: 600;
        color: #212529; /* Dark text */
        margin-bottom: 0.5rem;
        display: block;
    }

    .form-control {
        border: 1px solid #dee2e6; /* Light gray */
        border-radius: 0.375rem;
        padding: 0.5rem 0.75rem;
        transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;
    }

        .form-control:focus {
            border-color: #0A2240; /* Deep blue */
            box-shadow: 0 0 0 0.2rem rgba(10, 34, 64, 0.25);
        }

    select.form-control {
        appearance: none;
        background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'%3e%3cpath fill='none' stroke='%23343a40' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M2 5l6 6 6-6'/%3e%3c/svg%3e");
        background-repeat: no-repeat;
        background-position: right 0.75rem center;
        background-size: 16px 12px;
    }

    .text-danger {
        font-size: 0.875rem;
        color: #dc3545;
        margin-top: 0.25rem;
    }

    /* Button Styles */
    .btn {
        font-weight: 500;
        font-size: 0.8rem;
        padding: 0.5rem 1rem;
        border-radius: 0.25rem;
        transition: all 0.2s ease;
        display: inline-flex;
        align-items: center;
        justify-content: center;
        min-width: 100px;
    }

    .btn-sm {
        padding: 0.375rem 0.75rem;
    }

    .btn i {
        margin-right: 0.5rem;
        font-size: 0.8rem;
    }

    .btn-previous {
        background-color: #6c757d; /* Gray */
        color: white;
        border: 1px solid #6c757d;
    }

        .btn-previous:hover {
            background-color: #5a6268;
            color: white;
        }

    .btn-next {
        background-color: #28a745; /* Green */
        color: white;
        border: 1px solid #28a745;
    }

        .btn-next:hover {
            background-color: #218838;
            color: white;
        }

    .btn-save {
        background-color: #0A2240; /* Deep blue */
        color: white;
        border: 1px solid #0A2240;
    }

        .btn-save:hover {
            background-color: #1A3A6F;
            color: white;
        }

    .btn-add-customer {
        background-color: #28a745; /* Green */
        color: white;
        border: 1px solid #28a745;
    }

        .btn-add-customer:hover {
            background-color: #218838;
            color: white;
        }

    /* Modal Styles */
    .modal-header {
        background-color: #0A2240; /* Deep blue */
        color: white;
        border-bottom: none;
        padding: 1rem 1.5rem;
    }

    .modal-title {
        font-weight: 500;
    }

    .modal-footer {
        border-top: 1px solid #dee2e6; /* Light gray */
        padding: 1rem 1.5rem;
    }

    /* Button container */
    .button-group {
        display: flex;
        gap: 0.75rem;
        justify-content: flex-start;
        margin-top: 2rem;
        margin-bottom: 1rem;
        flex-wrap: wrap;
        margin-left: 0;
        padding-left: 0;
    }

    /* Date picker input styling */
    .date-picker {
        background-color: white;
    }

    /* Add Customer button container */
    .add-customer-container {
        text-align: left;
        margin-top: 1rem !important;
        padding-left: 0;
    }

    /* Responsive adjustments */
    @@media (max-width: 768px) {
        .progress-bar-img {
            width: 100%;
            height: auto;
        }

        .col-md-6 {
            margin-bottom: 1rem;
        }

        .button-group {
            justify-content: center;
            flex-direction: column;
            align-items: center;
        }

        .add-customer-container {
            text-align: center;
        }

        .btn {
            width: 100%;
            margin-bottom: 0.5rem;
        }
    }
</style>

<div class="container">
    <center>
        <img src="~/img/ProgressBarStep2.png" asp-append-version="true" alt="Progress bar step two" class="progress-bar-img" />
    </center>

    <h2>Step 2: Select or Create a Customer</h2>

    <div class="card-container">
        <form asp-action="Step2" method="post">
            @Html.AntiForgeryToken()
            <input type="hidden" asp-for="ID" />

            <div class="form-group">
                <label asp-for="CustomerID" class="control-label">Customer</label>
                <select asp-for="CustomerID" class="form-control" asp-items="Model.Customers">
                    <option value="">-- Select a Customer --</option>
                </select>
                <span asp-validation-for="CustomerID" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="EngineerID" class="control-label">Engineer</label>
                <select asp-for="EngineerID" class="form-control" asp-items="Model.Engineers">
                    <option value="">-- Select an Engineer --</option>
                </select>
                <span asp-validation-for="EngineerID" class="text-danger"></span>
            </div>

            <div class="row">
                <div class="col-md-6">
                    <div class="form-group">
                        <label asp-for="KickoffMeeting" class="control-label">Kickoff Meeting</label>
                        <input id="KickoffPicker" asp-for="KickoffMeeting" type="date" class="form-control date-picker" />
                        <span asp-validation-for="KickoffMeeting" class="text-danger"></span>
                    </div>

                    <div class="form-group">
                        <label asp-for="ApprovalDrawingExpected" class="control-label">Expected Approval Drawing</label>
                        <input id="ApprovalDrawingPicker" asp-for="ApprovalDrawingExpected" class="form-control date-picker" type="date" />
                        <span asp-validation-for="ApprovalDrawingExpected" class="text-danger"></span>
                    </div>

                    <div class="form-group">
                        <label asp-for="PreOrderExpected" class="control-label">Expected Pre Order</label>
                        <input id="PreOrderPicker" asp-for="PreOrderExpected" class="form-control date-picker" type="date" />
                        <span asp-validation-for="PreOrderExpected" class="text-danger"></span>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        <label asp-for="EngineerPackageExpected" class="control-label">Expected Engineer Package</label>
                        <input id="EngineerPackagePicker" asp-for="EngineerPackageExpected" class="form-control date-picker" type="date" />
                        <span asp-validation-for="EngineerPackageExpected" class="text-danger"></span>
                    </div>

                    <div class="form-group">
                        <label asp-for="PurchaseOrderExpected" class="control-label">Expected Purchase Order</label>
                        <input id="PurchaseOrderPicker" asp-for="PurchaseOrderExpected" class="form-control date-picker" type="date" />
                        <span asp-validation-for="PurchaseOrderExpected" class="text-danger"></span>
                    </div>

                    <div class="form-group">
                        <label asp-for="ReadinessToShipExpected" class="control-label">Expected Readiness To Ship</label>
                        <input id="ReadinessToShipPicker" asp-for="ReadinessToShipExpected" class="form-control date-picker" type="date" />
                        <span asp-validation-for="ReadinessToShipExpected" class="text-danger"></span>
                    </div>
                </div>
            </div>

            <div class="button-group">
                <!-- Previous Button -->
                <a asp-action="Step1" asp-route-id="@Model.ID" class="btn btn-previous btn-sm">
                    <i class="bi bi-arrow-left"></i>
                    <span>Previous Page</span>
                </a>

                <!-- Next Button -->
                <button type="submit" class="btn btn-next btn-sm">
                    <i class="bi bi-arrow-right"></i>
                    <span>Next Page</span>
                </button>

                <!-- Save Button -->
                <button type="submit" name="save" value="true" class="btn btn-save btn-sm">
                    <i class="bi bi-check-circle"></i>
                    <span>Save Process</span>
                </button>
            </div>
        </form>
    </div>

    <div class="add-customer-container">
        <button type="button" class="btn btn-add-customer btn-sm" data-bs-toggle="modal" data-bs-target="#customerModal">
            <i class="bi bi-person-plus"></i>
            <span>Add New Customer</span>
        </button>
    </div>
</div>

<!-- Customer Modal -->
<div class="modal fade" id="customerModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">New Customer</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div id="customerErrors" class="alert alert-danger d-none"></div>
                <div class="mb-3">
                    <label class="control-label">Customer Name</label>
                    <input type="text" id="newCustomerName" class="form-control" required>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary btn-sm" data-bs-dismiss="modal">
                    <i class="bi bi-x-circle"></i>
                    <span>Cancel</span>
                </button>
                <button type="button" id="saveCustomerBtn" class="btn btn-primary btn-sm">
                    <i class="bi bi-check-circle"></i>
                    <span>Save Customer</span>
                </button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script>
        $(function () {
            $('#saveCustomerBtn').click(function () {
                var customerName = $('#newCustomerName').val().trim();

                if (!customerName) {
                    $('#customerErrors').text('Customer name is required').removeClass('d-none');
                    return;
                }

                $.ajax({
                    url: '@Url.Action("CreateCustomer", "OperationsSchedule")',
                    type: 'POST',
                    data: { customerName: customerName },
                    success: function (response) {
                        if (response.success) {
                            // Add new option to select list
                            var select = $('#CustomerID');
                            select.append(new Option(response.customerName, response.customerId, true, true));

                            // Close modal and clear input
                            $('#customerModal').modal('hide');
                            $('#newCustomerName').val('');
                            $('#customerErrors').addClass('d-none');
                        } else {
                            $('#customerErrors').text(response.message).removeClass('d-none');
                        }
                    },
                    error: function () {
                        $('#customerErrors').text('Error saving customer').removeClass('d-none');
                    }
                });
            });
        });
    </script>

    <!-- Date pickers -->
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            // Configure all date pickers consistently
            const datePickers = [
                "KickoffPicker",
                "ApprovalDrawingPicker",
                "PreOrderPicker",
                "EngineerPackagePicker",
                "PurchaseOrderPicker",
                "ReadinessToShipPicker"
            ];

            datePickers.forEach(id => {
                const picker = document.getElementById(id);
                if (picker) {
                    flatpickr(picker, {
                        dateFormat: "Y-m-d",
                        minDate: "today",
                        defaultDate: new Date(),
                        disableMobile: true
                    });
                }
            });
        });
    </script>
}