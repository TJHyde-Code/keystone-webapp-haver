@model HaverGroupProject.Models.OperationsSchedule

@{
    ViewData["Title"] = "Details";
}

<div id="printArea">
    <h1 class="text-center">Order Details</h1>

    <input id="btnPrint" class="btn btn-info btn-sm py-1 px-2 btn-print" type="button"
           value="Print Details" onclick="PrintView()" />

    <div class="shadow-lg p-4 mb-5 bg-body-tertiary rounded">

        <!-- Customer Details -->
        <div class="card mb-3">
            <div class="card-header details-header text-white">Customer Details</div>
            <div class="card-body">
                <p><strong>@Html.DisplayNameFor(model => model.Customer.CustomerName):</strong> @Model.Customer?.CustomerName</p>
                <p><strong>@Html.DisplayNameFor(model => model.Customer.CustomerAddress):</strong> @Model.Customer?.CustomerAddress</p>
                <p><strong>@Html.DisplayNameFor(model => model.Customer.CustConSummary):</strong> @Model.Customer?.CustConSummary</p>
                <p><strong>@Html.DisplayNameFor(model => model.Customer.CustomerEmail):</strong> @Model.Customer?.CustomerEmail</p>
                <p><strong>@Html.DisplayNameFor(model => model.Customer.CustomerPhone):</strong> @Model.Customer?.CustomerPhone</p>
            </div>
        </div>

        <!-- Engineer Details -->
        <div class="card mb-3">
            <div class="card-header details-header text-white">Engineer Details</div>
            <div class="card-body">
                <p><strong>@Html.DisplayNameFor(model => model.Engineer.EngSummary):</strong> @Model.Engineer?.EngSummary</p>
                <p><strong>@Html.DisplayNameFor(model => model.Engineer.EngEmail):</strong> @Model.Engineer?.EngEmail</p>
                <p><strong>@Html.DisplayNameFor(model => model.Engineer.PhoneFormatted):</strong> @Model.Engineer?.PhoneFormatted</p>
            </div>
        </div>

        <!-- Machine List -->
        <div class="card mb-3">
            <div class="card-header details-header text-white">Machines(s)</div>
            <div class="card-body">
                @if (Model.OperationsScheduleMachines.Any())
                {
                    <ul class="list-group">
                        @foreach (var machine in Model.OperationsScheduleMachines)
                        {
                            <li class="list-group-item">@machine.MachineDescription.SerialNumber - @machine.MachineDescription.DescriptionSummary</li>
                        }
                    </ul>
                }
                else
                {
                    <p>No machines associated with this order.</p>
                }
            </div>
        </div>

        <!-- Operations Schedule -->
        <div class="card mb-3">
            <div class="card-header details-header text-white">Order Information</div>
            <div class="card-body">
                <p><strong>@Html.DisplayNameFor(model => model.SalesOrdNum):</strong> @Html.DisplayFor(model => model.SalesOrdNum)</p>
                <p><strong>@Html.DisplayNameFor(model => model.KickoffMeeting):</strong> @Html.DisplayFor(model => model.KickoffMeeting)</p>
                <p><strong>@Html.DisplayNameFor(model => model.PONum):</strong> @Html.DisplayFor(model => model.PONum)</p>
                <p><strong>@Html.DisplayNameFor(model => model.ProductionOrderNumber):</strong> @Html.DisplayFor(model => model.ProductionOrderNumber)</p>
            </div>
        </div>

        <!-- Vendor List -->
        <div class="card mb-3">
            <div class="card-header details-header text-white">Vendors</div>
            <div class="card-body">
                @if (Model.OperationsScheduleVendors.Any())
                {
                    <ul class="list-group">
                        @foreach (var vendor in Model.OperationsScheduleVendors)
                        {
                            <li class="list-group-item">@vendor.Vendor.VendorName - @vendor.Vendor.VendorPhone</li>
                        }
                    </ul>
                }
                else
                {
                    <p>No vendors associated with this order.</p>
                }
            </div>
        </div>

        <!-- Notes Section -->
        <div class="card mb-3">
            <div class="card-header details-header text-white">Notes</div>
            <div class="card-body">
                <p><strong>Pre-Order:</strong> @Model.Note?.PreOrder</p>
                <p><strong>Scope:</strong> @Model.Note?.Scope</p>
                <p><strong>Budget Assembly Hours:</strong> @Model.Note?.BudgetAssembHrs</p>
                <p><strong>Actual Assembly Hours:</strong> @Model.Note?.ActualAssembHours</p>
                <p><strong>Actual Rework Hours:</strong> @Model.Note?.ActualReworkHours</p>
                <p><strong>Other Comments:</strong> @Model.Note?.OtherComments</p>
            </div>
        </div>


        <!-- Buttons -->
        <div class="d-flex justify-content-between mt-4">
            <div class="d-flex gap-2">
                <!-- Back to List Button -->
                <a asp-action="Index"
                   class="btn btn-success btn-sm py-1 px-2"
                   title="Back to List">
                    <i class="bi bi-arrow-left me-1"></i>Back to List
                </a>

                <!-- Edit Button -->
                <a asp-action="Edit" asp-route-id="@Model?.ID"
                   class="btn btn-primary btn-sm py-1 px-2"
                   title="Edit Record">
                    <i class="bi bi-pencil-fill me-1"></i>Edit Details
                </a>
            </div>
        </div>


    </div>
</div>

@section Scripts {
    <script type="text/javascript">
        function PrintView() {
            var btnPrint = document.getElementById("btnPrint");
            btnPrint.style.display = "none";

            var printArea = document.getElementById("printArea");
            var printWindow = window.open('', '_blank', 'top=100, left=200, height=500, width=700');

            printWindow.document.write('<html><head><title>Order Details</title>');
            printWindow.document.write('<style>@@media print { @@page { margin: 0; } body { margin: 1cm; } }</style>');
            printWindow.document.write('</head><body>');
            printWindow.document.write(printArea.innerHTML);
            printWindow.document.close();
            printWindow.print();

            btnPrint.style.display = "block";
            printWindow.close();
        }
    </script>
}

<style>
    .details-header {
        background-color: #0A2240;
    }

    .shadow-lg {
        box-shadow: 0 1rem 3rem rgba(0,0,0,.175) !important;
    }

    .rounded {
        border-radius: 0.5rem !important;
    }

    .btn-print {
        position: absolute;
        right: 20px;
        top: 20px;
    }

    .list-group-item {
        border-left: none;
        border-right: none;
    }
</style>